package test.command;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import common.util.Constains;
import common.util.HttpResponseUtil;
import common.util.StringUtil;
import common.vo.VoResponse;
import plugins.winning.inpatient.service.QueryDocListService;
import plugins.winning.inpatient.service.SignOpinionFillService;
import plugins.winning.inpatient.vo.WinningRequest;
import plugins.winning.inpatient.vo.WinningResponse;
import servlet.command.QueryPatientServlet;
import servlet.inDataBean.SignDetailInDataBean;
import servlet.inDataBean.SignOpinionFillInDataBean;
import servlet.outDataBean.SignDetailOutDataBean;
import servlet.outDataBean.SignOpinionFillOutDataBean;

/**
 * Servlet implementation class SignOpinionFillServlet
 */
@WebServlet("/test/SignOpinionFill")
public class SignOpinionFillServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
	boolean test = false; 
    /**
     * @see HttpServlet#HttpServlet()
     */
    public SignOpinionFillServlet() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doPost(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		SignOpinionFillInDataBean inData=new SignOpinionFillInDataBean();
		VoResponse voResponse = new VoResponse();
		try {
			inData.setRecordId(request.getParameter("iRecordId"));
			inData.setDiagnoseId(request.getParameter("iDiagnoseId"));
			inData.setStatus(request.getParameter("iStatus"));
			inData.setCheckId(request.getParameter("checkId"));
			inData.setCheckContent(request.getParameter("checkContent"));

//			if (StringUtil.isEmpty(inData.getRecordId()) || StringUtil.isEmpty(inData.getCheckId()) || StringUtil.isEmpty(inData.getCheckContent())||StringUtil.isEmpty(inData.getDiagnoseId())||StringUtil.isEmpty(inData.getStatus())) {
//				throw new Exception("参数不能为空");
//			}
		} catch (Exception e) {
			voResponse.setRet_code(Constains.ERROR_CODE);
			voResponse.setRet_msg("参数异常：" + e.getMessage());
			HttpResponseUtil.response(voResponse, response);
			return;
		}
		WinningResponse responseW = new WinningResponse();
		if (!test) {
		
		

		/***
		 * 将inDataBean转换为winning的request
		 */
		Map param = new HashMap();
		param.put("iRecordId", inData.getRecordId());
		param.put("iDiagnoseId", inData.getDiagnoseId());
		param.put("iStatus", inData.getStatus());
		param.put("checkId", inData.getCheckId());
		param.put("checkContent", inData.getCheckContent());
		WinningRequest requestW = new WinningRequest();
		requestW.setParam(param);
		/***
		 * 调用winning的服务进行业务请求
		 */
		 responseW = SignOpinionFillService.SignOpinionFill(requestW);
		}else {
			Map testData = new HashMap();
			
			if(inData.equals("456")){
				responseW.setRet_code("0000");
				responseW.setRet_msg("");
			}else{
				responseW.setRet_code("9999");
				responseW.setRet_msg("不存在此用户");
			}
			
		}
		
		
		
		
		
		/***
		 * 将winning的 response解析为vo 1.将retData字符串转换为json对象 2.遍历json数组，将多行数据放入list
		 * 3.使用工具类，将outData通过response响应给请求端
		 */

		
		if(responseW.isSuccess()){
			try{
				voResponse.setRet_code(Constains.SUCCESS_CODE);
				voResponse.setRet_msg(Constains.SUCCESS_MSG);
			}catch(Exception e){
				voResponse.setRet_code(Constains.ERROR_CODE);
				voResponse.setRet_msg("返回数据异常："+e.getMessage());
			}
			
		}else{
			voResponse.setRet_code(Constains.ERROR_CODE);
			voResponse.setRet_msg("访问异常:"+responseW.getRet_msg());
		}
		
		HttpResponseUtil.response(voResponse, response);
	}
	public void init() throws ServletException {
		// Put your code here
		String packageName = QueryPatientServlet.class.getPackage().getName();
		if (packageName.indexOf("test.") >= 0)
			test = true;
	}
}
