package com.java.servlet.command;

import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.junit.Test;

import com.java.common.util.Constains;
import com.java.common.util.HttpResponseUtil;
import com.java.common.vo.VoResponse;
import com.java.plugins.winning.inpatient.service.QueryDocListService;
import com.java.plugins.winning.inpatient.vo.WinningRequest;
import com.java.plugins.winning.inpatient.vo.WinningResponse;
import com.java.servlet.inDataBean.LoginInDataBean;
import com.java.servlet.outDataBean.DocListOutDataBean;
import com.java.servlet.outDataBean.LoginOutDataBean;

import net.sf.json.JSONObject;

public class LoginAppServlet extends HttpServlet {

	/**
	 * Constructor of the object.
	 */
	public LoginAppServlet() {
		super();
	}

	/**
	 * Destruction of the servlet. <br>
	 */
	public void destroy() {
		super.destroy(); // Just puts "destroy" string in log
		// Put your code here
	}

	/**
	 * The doGet method of the servlet. <br>
	 *
	 * This method is called when a form has its tag value method equals to get.
	 * 
	 * @param request
	 *            the request send by the client to the server
	 * @param response
	 *            the response send by the server to the client
	 * @throws ServletException
	 *             if an error occurred
	 * @throws IOException
	 *             if an error occurred
	 */
	public void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		doPost(request, response);
	}

	/**
	 * The doPost method of the servlet. <br>
	 *
	 * This method is called when a form has its tag value method equals to
	 * post.
	 * 
	 * @param request
	 *            the request send by the client to the server
	 * @param response
	 *            the response send by the server to the client
	 * @throws ServletException
	 *             if an error occurred
	 * @throws IOException
	 *             if an error occurred
	 */
	public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		/***
		 * 将request解析为inDataBean
		 */
		LoginInDataBean inData = new LoginInDataBean();
		inData.setUserName(request.getParameter("userName"));
		inData.setPassWord(request.getParameter("password"));
		/***
		 * 将inDataBean转换为winning的request
		 */
		Map param = new HashMap();
		param.put("username", inData.getUserName());
		param.put("pwd", inData.getPassWord());
		WinningRequest requestW = new WinningRequest();
		requestW.setParam(param);
		/***
		 * 调用winning的服务进行业务请求
		 */
		WinningResponse responseW = QueryDocListService.queryDocList(requestW);

		/***
		 * 将winning的 response解析为vo 1.将retData字符串转换为json对象 2.遍历json数组，将多行数据放入list
		 * 3.使用工具类，将outData通过response响应给请求端
		 */
		LoginOutDataBean outData = new LoginOutDataBean();
		String responseWretData = responseW.getAppId();
		VoResponse voResponse=new VoResponse();
		if(1==1){
			
			outData.setUserId("123");
			voResponse.setRetCode(Constains.SUCCESS_CODE);
			voResponse.setRetCode(Constains.SUCCESS_MSG);
			voResponse.setRetData(outData);
		}else{
			
			outData.setErrorMsg("密码错误");
			voResponse.setRetCode(Constains.SUCCESS_CODE);
			voResponse.setRetCode(Constains.SUCCESS_MSG);
			voResponse.setRetData(outData);
		}
		
		HttpResponseUtil.response(voResponse, response);

	}

	/**
	 * Initialization of the servlet. <br>
	 *
	 * @throws ServletException
	 *             if an error occurs
	 */
	public void init() throws ServletException {
		// Put your code here
	}


	
}
